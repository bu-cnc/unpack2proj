#!/usr/bin/env python

import os
import sys
import subprocess

from os import path
from subprocess import Popen, PIPE
from optparse import OptionParser

usage = "usage: %prog [options] arg1 arg2"
parser = OptionParser(usage=usage)
parser.add_option("-i","--dicom",dest="dcm",help="input directory containing DICOM files to be unpacked")
parser.add_option("-o","--unpacked",dest="unpacked",help="output directory containing unpacked files")
parser.add_option("-f","--format",dest="format",help="format of unpacked files, options include nii.gz (default), nii, mgz",default="nii.gz")

options, args = parser.parse_args()

print('Python: v%s' % (sys.version.split()[0]))

if 'SCC_FREESURFER_BIN' in os.environ:
    f = open('%s/build-stamp.txt' % (os.environ['FREESURFER_HOME']), 'r')
    text = f.readlines()
    f.close()
    fs_version = str(text)
    print('FreeSurfer: %s' % (fs_version.split('-')[5]))
else:
    print('Oops! FreeSurfer is not loaded')
    print('Load desired FreeSurfer version to use unpack4scc')
    print('eg: module load freesurfer/6.0')
    sys.exit(1)
if os.path.isfile('%s/dcmunpack' % (os.environ['SCC_FREESURFER_BIN'])):
    print('dcmunpack: yes')
else:
    print('dcmunpack: no')
    print('Oops! dcmunpack is not installed for loaded FreeSurfer module')
    sys.exit(1)

DICOM_DIR = options.dcm
UNPACKED_DIR = options.unpacked
UNPACKED_FORMAT = options.format

if not os.path.exists(path.abspath(DICOM_DIR)):
    print('ERROR: No such file or directory: \'%s\'' % (path.abspath(DICOM_DIR)))
    sys.exit(1)

print('Unpacking from: %s\nTo: %s' % (path.abspath(DICOM_DIR),path.abspath(UNPACKED_DIR)))

if not os.path.exists('%s/log' % (UNPACKED_DIR)):
    print('Setting up %s...' % (UNPACKED_DIR))
    os.system('mkdir -p %s/log' % (UNPACKED_DIR))
### Create scan list for unpacking
if not os.path.isfile('%s/sequence_list' % (UNPACKED_DIR)):
    print('sequence_list missing\nBuilding sequence_list...')
    scanlist = 'dcmunpack -src %s -scanonly %s/sequence_list -log %s/log/sequence_list.log' % (DICOM_DIR, UNPACKED_DIR, UNPACKED_DIR)

    p_scanlist = Popen(scanlist,shell=True,stdout=PIPE,stderr=PIPE)
    p_scanlist.communicate()

### Unpack sequences listed in $UNPACKED_DIR/scanlist (created above)
print('Reading sequence_list')
seq_file = open('%s/sequence_list' % (UNPACKED_DIR), 'r').read()
seq_list = seq_file.splitlines()

print('Running dcmunpack now...')  
for seq_line in seq_list:
    seq = seq_line.split(" ")
    seq_number = seq[0]
    seq_name = seq[1]
    print('Unpacking %s...' % (seq_name))
    unpack = 'dcmunpack -src %s -targ %s -run %s %s %s %s' % (DICOM_DIR, UNPACKED_DIR, seq_number, seq_name, UNPACKED_FORMAT,seq_number.zfill(3))
    p_unpack = Popen(unpack,shell=True,stdout=PIPE,stderr=PIPE)
    p_unpack.communicate()

print('DICOMs unpacked to %s successfully' % (UNPACKED_DIR))
print('unpack4scc complete')
